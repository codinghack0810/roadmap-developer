---
import Icon from '../Icon.astro';
import Spinner from '../Spinner.astro';
---

<button
  class='inline-flex h-10 w-full items-center justify-center rounded border border-slate-300 bg-white p-2 text-sm font-medium text-black outline-none transition duration-150 ease-in-out focus:ring-2 focus:ring-[#333] focus:ring-offset-1 disabled:opacity-60'
  id='github-login-button'
>
  <Spinner class='hidden text-black' id='github-login-spinner' />
  <div class='flex items-center' data-github-text>
    <Icon icon='github' />
    <span class='ml-2'>Continue with Github</span>
  </div>
</button>

<p class='hidden text-sm font-medium text-red-600' data-github-error></p>

<script>
  import Cookies from 'js-cookie';
  import { TOKEN_COOKIE_NAME } from '../../lib/utils';
  const githubLoginButton = document.getElementById('github-login-button');
  const githubLoginSpinner = document.getElementById('github-login-spinner');
  const githubLoginText = document.querySelector('[data-github-text]');
  const githubErrorText = document.querySelector('[data-github-error]');

  function addSpinner() {
    githubLoginText?.classList.add('hidden');
    githubLoginSpinner?.classList.remove('hidden');
  }

  function hideSpinner() {
    githubLoginText?.classList.remove('hidden');
    githubLoginSpinner?.classList.add('hidden');
  }

  function showError(err: Error) {
    githubErrorText?.classList.remove('hidden');
    if (githubErrorText) {
      githubErrorText.innerHTML = err.message;
    }
  }

  githubLoginButton?.addEventListener('click', () => {
    addSpinner();
    fetch('http://localhost:8080/v1-github-login', {
      credentials: 'include',
    })
      .then((res) => {
        if (res.ok) {
          return res.json();
        } else {
          throw new Error('Something went wrong.');
        }
      })
      .then((data) => {
        // Remove spinner
        hideSpinner();
        // Redirect to google login
        if (data.loginUrl) {
          window.location.href = data.loginUrl;
        } else {
          // Else throw error
          throw new Error('Something went wrong.');
        }
      })
      .catch((err: Error) => {
        hideSpinner();

        // Show error in the UI
        showError(err);
      });
  });

  window.addEventListener('load', () => {
    // Get all query params and send them to v1-github-callback
    const urlParams = new URLSearchParams(window.location.search);
    const code = urlParams.get('code');
    const state = urlParams.get('state');
    const provider = urlParams.get('provider');

    if (code && state && provider === 'github') {
      addSpinner();
      fetch(
        `http://localhost:8080/v1-github-callback${window.location.search}`,
        {
          method: 'GET',
          credentials: 'include',
        }
      )
        .then((res) => {
          if (res.ok) {
            return res.json();
          } else {
            throw new Error('Something went wrong.');
          }
        })
        .then((data) => {
          // Remove spinner
          hideSpinner();

          // Set token in cookie and redirect to home
          if (data.token) {
            Cookies.set(TOKEN_COOKIE_NAME, data.token);

            // Redirect to the page the user was on before login
            history.go(-2);
          } else {
            throw new Error('Something went wrong.');
          }
        })
        .catch((err: Error) => {
          hideSpinner();
          showError(err);
        });
    }
  });
</script>
