---
import GuideHeader from '../../components/GuideHeader.astro';
import MarkdownFile from '../../components/MarkdownFile.astro';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getAllGuides, type GuideFileType } from '../../lib/guide';

export interface Props {
  guide: GuideFileType;
}

export async function getStaticPaths() {
  const guides = (await getAllGuides()).filter(
    (guide) => !guide.frontmatter.excludedBySlug,
  );

  return guides.map((guide) => ({
    params: { guideId: guide.id },
    props: { guide },
  }));
}

const { guideId } = Astro.params;
const { guide } = Astro.props;
const { frontmatter: guideData, author } = guide;

const ogImageUrl = `${import.meta.env.PUBLIC_API_URL}/v1-open-graph?${new URLSearchParams(
  {
    type: 'guide',
    title: guideData.title,
    description: guideData.description,
    authorName: author.frontmatter?.name,
    authorAvatar: author.frontmatter?.imageUrl || '',
  },
)}`;
---

<BaseLayout
  title={guideData.seo.title}
  description={guideData.seo.description}
  permalink={`/guides/${guideId}`}
  canonicalUrl={guideData.canonicalUrl}
  ogImageUrl={ogImageUrl}
>
  <GuideHeader guide={guide} />

  <div class='mx-auto max-w-[700px] py-5 sm:py-10'>
    <MarkdownFile>
      <guide.Content />
    </MarkdownFile>
  </div>
</BaseLayout>
